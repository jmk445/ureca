public AdminDialog(MallManager parent) {
    super(parent, "관리자 페이지", true);
    setSize(700, 500);
    setLocationRelativeTo(parent);

    // 상단에 메시지 추가
    JPanel topPanel = new JPanel();
    topPanel.add(new JLabel("각 셀을 눌러 수정할 수 있습니다."));
    add(topPanel, BorderLayout.NORTH);

    phoneTableModel = new DefaultTableModel(new Object[]{"모델명", "가격(원)", "제조사", "재고"}, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return column != 0; // 모델명은 수정 불가, 나머지는 수정 가능
        }
    };
    phoneTable = new JTable(phoneTableModel);
    listPhones(); // 휴대폰 목록 불러오기

    phoneTableModel.addTableModelListener(new TableModelListener() {
        @Override
        public void tableChanged(TableModelEvent e) {
            if (e.getType() == TableModelEvent.UPDATE) {
                int row = e.getFirstRow();
                updatePhoneInfo(row);
            }
        }
    });

    orderTableModel = new DefaultTableModel(new Object[]{"주문자", "주문 시간", "주문 휴대폰"}, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // 편집 불가
        }
    };
    orderTable = new JTable(orderTableModel);
    listOrders(); // 주문 목록 불러오기

    JSplitPane splitPane = new JSplitPane(JSplitPane.VERTICAL_SPLIT, new JScrollPane(phoneTable), new JScrollPane(orderTable));
    splitPane.setResizeWeight(0.5); // 위쪽(휴대폰 목록) 크기를 50% 차지하도록 설정

    setLayout(new BorderLayout());
    add(splitPane, BorderLayout.CENTER);

    JPanel bottomPanel = new JPanel();
    add(bottomPanel, BorderLayout.SOUTH);

    JButton addPhoneButton = new JButton("휴대폰 추가");
    addPhoneButton.addActionListener(e -> addPhone());
    bottomPanel.add(addPhoneButton);
}

package app.phone.ui;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;

import app.phone.dao.PhoneDao;
import app.phone.dto.Phone;

public class MallManager extends JFrame {

    private JTable table;
    private DefaultTableModel tableModel;
    private JButton shoppingCartButton;
    private PhoneDao phoneDao = new PhoneDao();

    public MallManager() {
        setTitle("앗 휴대폰 신발보다 싸다");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        // 테이블 모델 생성 (버튼 추가를 위해 "액션" 열 포함)
        tableModel = new DefaultTableModel(new Object[]{"모델명", "가격(원)", "제조사", "재고", "액션"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 4; // "액션" 열만 수정 가능 (버튼 클릭)
            }
        };

        table = new JTable(tableModel);

        // "액션" 열에 버튼 추가
        table.getColumn("액션").setCellRenderer(new ButtonRenderer());
        table.getColumn("액션").setCellEditor(new ButtonEditor(new JButton("추가")));

        listPhone();

        shoppingCartButton = new JButton("장바구니 보기");
        JPanel bottomPanel = new JPanel();
        bottomPanel.add(shoppingCartButton);

        setLayout(new BorderLayout());
        add(new JScrollPane(table), BorderLayout.CENTER);
        add(bottomPanel, BorderLayout.SOUTH);

        shoppingCartButton.addActionListener(e -> {
            ShoppingCartDialog cartDialog = new ShoppingCartDialog(this);
            cartDialog.setVisible(true);
        });
    }

    private void clearTable() {
        tableModel.setRowCount(0);
    }

    private void listPhone() {
        clearTable();

        List<Phone> phoneList = phoneDao.listPhone();

        for (Phone phone : phoneList) {
            tableModel.addRow(new Object[]{
                phone.getPhoneName(),
                phone.getPhoneprice(),
                phone.getPhonemaker(),
                phone.getPhoneremain(),
                "추가" // 버튼 텍스트
            });
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            new MallManager().setVisible(true);
        });
    }
}

/**
 * 버튼을 렌더링하는 클래스 (버튼을 표시)
 */
class ButtonRenderer extends JButton implements TableCellRenderer {
    public ButtonRenderer() {
        setText("추가");
    }

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        return this;
    }
}

/**
 * 버튼을 편집(클릭)할 수 있도록 하는 클래스 (버튼 클릭 이벤트 처리)
 */
class ButtonEditor extends AbstractCellEditor implements TableCellEditor, ActionListener {
    private JButton button;
    private String label;
    private int selectedRow;

    public ButtonEditor(JButton button) {
        this.button = new JButton();
        this.button.addActionListener(this);
    }

    @Override
    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
        label = (value == null) ? "추가" : value.toString();
        button.setText(label);
        selectedRow = row;
        return button;
    }

    @Override
    public Object getCellEditorValue() {
        return label;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        System.out.println("선택된 행: " + selectedRow + "의 '추가' 버튼 클릭됨!");
        fireEditingStopped();
    }
}
